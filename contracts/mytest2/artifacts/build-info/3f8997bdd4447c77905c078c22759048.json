{
	"id": "3f8997bdd4447c77905c078c22759048",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/mytest2/ERC770.sol": {
				"content": "\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.6.0;\r\n// import \"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\";\r\n// import \"@openzeppelin/contracts/token/ERC777/IERC777.sol\";\r\n// import \"@openzeppelin/contracts/introspection/IERC1820Registry.sol\";\r\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777Recipient.sol\";\r\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777.sol\";\r\nimport \"@openzeppelin/contracts-ethereum-package/contracts/introspection/IERC1820Registry.sol\";\r\n\r\ncontract Merit is IERC777Recipient {\r\n    mapping(address => uint) public givers;\r\n    address _owner;\r\n    IERC777 _token;\r\n    IERC1820Registry private _erc1820 = IERC1820Registry(0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24);\r\n\r\n    bytes32 constant private TOKENS_RECIPIENT_INTERFACE_HASH = 0xb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b;\r\n    constructor(IERC777 token) public {\r\n        _erc1820.setInterfaceImplementer(address(this), TOKENS_RECIPIENT_INTERFACE_HASH, address(this));\r\n        _owner = msg.sender;\r\n        _token = token;\r\n    }\r\n    function tokensReceived  (\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint amount,\r\n        bytes calldata userData,\r\n        bytes calldata operatorData\r\n    ) external override {\r\n        givers[from] += amount;\r\n    }\r\n    // 功德箱管理员提取代币\r\n    function withdraw() external {\r\n        require(msg.sender == _owner, \"no permission\");\r\n        uint balance = _token.balanceOf(address(this));\r\n        _token.send(_owner, balance, \"\");\r\n    }\r\n}"
			},
			"@openzeppelin/contracts-ethereum-package/contracts/introspection/IERC1820Registry.sol": {
				"content": "pragma solidity ^0.6.0;\n\n/**\n * @dev Interface of the global ERC1820 Registry, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register\n * implementers for interfaces in this registry, as well as query support.\n *\n * Implementers may be shared by multiple accounts, and can also implement more\n * than a single interface for each account. Contracts can implement interfaces\n * for themselves, but externally-owned accounts (EOA) must delegate this to a\n * contract.\n *\n * {IERC165} interfaces can also be queried via the registry.\n *\n * For an in-depth explanation and source code analysis, see the EIP text.\n */\ninterface IERC1820Registry {\n    /**\n     * @dev Sets `newManager` as the manager for `account`. A manager of an\n     * account is able to set interface implementers for it.\n     *\n     * By default, each account is its own manager. Passing a value of `0x0` in\n     * `newManager` will reset the manager to this initial state.\n     *\n     * Emits a {ManagerChanged} event.\n     *\n     * Requirements:\n     *\n     * - the caller must be the current manager for `account`.\n     */\n    function setManager(address account, address newManager) external;\n\n    /**\n     * @dev Returns the manager for `account`.\n     *\n     * See {setManager}.\n     */\n    function getManager(address account) external view returns (address);\n\n    /**\n     * @dev Sets the `implementer` contract as ``account``'s implementer for\n     * `interfaceHash`.\n     *\n     * `account` being the zero address is an alias for the caller's address.\n     * The zero address can also be used in `implementer` to remove an old one.\n     *\n     * See {interfaceHash} to learn how these are created.\n     *\n     * Emits an {InterfaceImplementerSet} event.\n     *\n     * Requirements:\n     *\n     * - the caller must be the current manager for `account`.\n     * - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not\n     * end in 28 zeroes).\n     * - `implementer` must implement {IERC1820Implementer} and return true when\n     * queried for support, unless `implementer` is the caller. See\n     * {IERC1820Implementer-canImplementInterfaceForAddress}.\n     */\n    function setInterfaceImplementer(address account, bytes32 interfaceHash, address implementer) external;\n\n    /**\n     * @dev Returns the implementer of `interfaceHash` for `account`. If no such\n     * implementer is registered, returns the zero address.\n     *\n     * If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28\n     * zeroes), `account` will be queried for support of it.\n     *\n     * `account` being the zero address is an alias for the caller's address.\n     */\n    function getInterfaceImplementer(address account, bytes32 interfaceHash) external view returns (address);\n\n    /**\n     * @dev Returns the interface hash for an `interfaceName`, as defined in the\n     * corresponding\n     * https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP].\n     */\n    function interfaceHash(string calldata interfaceName) external pure returns (bytes32);\n\n    /**\n     *  @notice Updates the cache with whether the contract implements an ERC165 interface or not.\n     *  @param account Address of the contract for which to update the cache.\n     *  @param interfaceId ERC165 interface for which to update the cache.\n     */\n    function updateERC165Cache(address account, bytes4 interfaceId) external;\n\n    /**\n     *  @notice Checks whether a contract implements an ERC165 interface or not.\n     *  If the result is not cached a direct lookup on the contract address is performed.\n     *  If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\n     *  {updateERC165Cache} with the contract address.\n     *  @param account Address of the contract to check.\n     *  @param interfaceId ERC165 interface to check.\n     *  @return True if `account` implements `interfaceId`, false otherwise.\n     */\n    function implementsERC165Interface(address account, bytes4 interfaceId) external view returns (bool);\n\n    /**\n     *  @notice Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\n     *  @param account Address of the contract to check.\n     *  @param interfaceId ERC165 interface to check.\n     *  @return True if `account` implements `interfaceId`, false otherwise.\n     */\n    function implementsERC165InterfaceNoCache(address account, bytes4 interfaceId) external view returns (bool);\n\n    event InterfaceImplementerSet(address indexed account, bytes32 indexed interfaceHash, address indexed implementer);\n\n    event ManagerChanged(address indexed account, address indexed newManager);\n}\n"
			},
			"@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777.sol": {
				"content": "pragma solidity ^0.6.0;\n\n/**\n * @dev Interface of the ERC777Token standard as defined in the EIP.\n *\n * This contract uses the\n * https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let\n * token holders and recipients react to token movements by using setting implementers\n * for the associated interfaces in said registry. See {IERC1820Registry} and\n * {ERC1820Implementer}.\n */\ninterface IERC777 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the smallest part of the token that is not divisible. This\n     * means all token operations (creation, movement and destruction) must have\n     * amounts that are a multiple of this number.\n     *\n     * For most token contracts, this value will equal 1.\n     */\n    function granularity() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by an account (`owner`).\n     */\n    function balanceOf(address owner) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * If send or receive hooks are registered for the caller and `recipient`,\n     * the corresponding functions will be called with `data` and empty\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits a {Sent} event.\n     *\n     * Requirements\n     *\n     * - the caller must have at least `amount` tokens.\n     * - `recipient` cannot be the zero address.\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function send(address recipient, uint256 amount, bytes calldata data) external;\n\n    /**\n     * @dev Destroys `amount` tokens from the caller's account, reducing the\n     * total supply.\n     *\n     * If a send hook is registered for the caller, the corresponding function\n     * will be called with `data` and empty `operatorData`. See {IERC777Sender}.\n     *\n     * Emits a {Burned} event.\n     *\n     * Requirements\n     *\n     * - the caller must have at least `amount` tokens.\n     */\n    function burn(uint256 amount, bytes calldata data) external;\n\n    /**\n     * @dev Returns true if an account is an operator of `tokenHolder`.\n     * Operators can send and burn tokens on behalf of their owners. All\n     * accounts are their own operator.\n     *\n     * See {operatorSend} and {operatorBurn}.\n     */\n    function isOperatorFor(address operator, address tokenHolder) external view returns (bool);\n\n    /**\n     * @dev Make an account an operator of the caller.\n     *\n     * See {isOperatorFor}.\n     *\n     * Emits an {AuthorizedOperator} event.\n     *\n     * Requirements\n     *\n     * - `operator` cannot be calling address.\n     */\n    function authorizeOperator(address operator) external;\n\n    /**\n     * @dev Revoke an account's operator status for the caller.\n     *\n     * See {isOperatorFor} and {defaultOperators}.\n     *\n     * Emits a {RevokedOperator} event.\n     *\n     * Requirements\n     *\n     * - `operator` cannot be calling address.\n     */\n    function revokeOperator(address operator) external;\n\n    /**\n     * @dev Returns the list of default operators. These accounts are operators\n     * for all token holders, even if {authorizeOperator} was never called on\n     * them.\n     *\n     * This list is immutable, but individual holders may revoke these via\n     * {revokeOperator}, in which case {isOperatorFor} will return false.\n     */\n    function defaultOperators() external view returns (address[] memory);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\n     * be an operator of `sender`.\n     *\n     * If send or receive hooks are registered for `sender` and `recipient`,\n     * the corresponding functions will be called with `data` and\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits a {Sent} event.\n     *\n     * Requirements\n     *\n     * - `sender` cannot be the zero address.\n     * - `sender` must have at least `amount` tokens.\n     * - the caller must be an operator for `sender`.\n     * - `recipient` cannot be the zero address.\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function operatorSend(\n        address sender,\n        address recipient,\n        uint256 amount,\n        bytes calldata data,\n        bytes calldata operatorData\n    ) external;\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the total supply.\n     * The caller must be an operator of `account`.\n     *\n     * If a send hook is registered for `account`, the corresponding function\n     * will be called with `data` and `operatorData`. See {IERC777Sender}.\n     *\n     * Emits a {Burned} event.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     * - the caller must be an operator for `account`.\n     */\n    function operatorBurn(\n        address account,\n        uint256 amount,\n        bytes calldata data,\n        bytes calldata operatorData\n    ) external;\n\n    event Sent(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256 amount,\n        bytes data,\n        bytes operatorData\n    );\n\n    event Minted(address indexed operator, address indexed to, uint256 amount, bytes data, bytes operatorData);\n\n    event Burned(address indexed operator, address indexed from, uint256 amount, bytes data, bytes operatorData);\n\n    event AuthorizedOperator(address indexed operator, address indexed tokenHolder);\n\n    event RevokedOperator(address indexed operator, address indexed tokenHolder);\n}\n"
			},
			"@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777Recipient.sol": {
				"content": "pragma solidity ^0.6.0;\n\n/**\n * @dev Interface of the ERC777TokensRecipient standard as defined in the EIP.\n *\n * Accounts can be notified of {IERC777} tokens being sent to them by having a\n * contract implement this interface (contract holders can be their own\n * implementer) and registering it on the\n * https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\n *\n * See {IERC1820Registry} and {ERC1820Implementer}.\n */\ninterface IERC777Recipient {\n    /**\n     * @dev Called by an {IERC777} token contract whenever tokens are being\n     * moved or created into a registered account (`to`). The type of operation\n     * is conveyed by `from` being the zero address or not.\n     *\n     * This call occurs _after_ the token contract's state is updated, so\n     * {IERC777-balanceOf}, etc., can be used to query the post-operation state.\n     *\n     * This function may revert to prevent the operation from being executed.\n     */\n    function tokensReceived(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes calldata userData,\n        bytes calldata operatorData\n    ) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-ethereum-package/contracts/introspection/IERC1820Registry.sol": {
				"IERC1820Registry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "interfaceHash",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementer",
									"type": "address"
								}
							],
							"name": "InterfaceImplementerSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newManager",
									"type": "address"
								}
							],
							"name": "ManagerChanged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "interfaceHash",
									"type": "bytes32"
								}
							],
							"name": "getInterfaceImplementer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "implementsERC165Interface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "implementsERC165InterfaceNoCache",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "interfaceName",
									"type": "string"
								}
							],
							"name": "interfaceHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "interfaceHash",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "implementer",
									"type": "address"
								}
							],
							"name": "setInterfaceImplementer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "newManager",
									"type": "address"
								}
							],
							"name": "setManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "updateERC165Cache",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the global ERC1820 Registry, as defined in the https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register implementers for interfaces in this registry, as well as query support. Implementers may be shared by multiple accounts, and can also implement more than a single interface for each account. Contracts can implement interfaces for themselves, but externally-owned accounts (EOA) must delegate this to a contract. {IERC165} interfaces can also be queried via the registry. For an in-depth explanation and source code analysis, see the EIP text.",
						"kind": "dev",
						"methods": {
							"getInterfaceImplementer(address,bytes32)": {
								"details": "Returns the implementer of `interfaceHash` for `account`. If no such implementer is registered, returns the zero address. If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28 zeroes), `account` will be queried for support of it. `account` being the zero address is an alias for the caller's address."
							},
							"getManager(address)": {
								"details": "Returns the manager for `account`. See {setManager}."
							},
							"implementsERC165Interface(address,bytes4)": {
								"params": {
									"account": "Address of the contract to check.",
									"interfaceId": "ERC165 interface to check."
								},
								"returns": {
									"_0": "True if `account` implements `interfaceId`, false otherwise."
								}
							},
							"implementsERC165InterfaceNoCache(address,bytes4)": {
								"params": {
									"account": "Address of the contract to check.",
									"interfaceId": "ERC165 interface to check."
								},
								"returns": {
									"_0": "True if `account` implements `interfaceId`, false otherwise."
								}
							},
							"interfaceHash(string)": {
								"details": "Returns the interface hash for an `interfaceName`, as defined in the corresponding https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP]."
							},
							"setInterfaceImplementer(address,bytes32,address)": {
								"details": "Sets the `implementer` contract as ``account``'s implementer for `interfaceHash`. `account` being the zero address is an alias for the caller's address. The zero address can also be used in `implementer` to remove an old one. See {interfaceHash} to learn how these are created. Emits an {InterfaceImplementerSet} event. Requirements: - the caller must be the current manager for `account`. - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not end in 28 zeroes). - `implementer` must implement {IERC1820Implementer} and return true when queried for support, unless `implementer` is the caller. See {IERC1820Implementer-canImplementInterfaceForAddress}."
							},
							"setManager(address,address)": {
								"details": "Sets `newManager` as the manager for `account`. A manager of an account is able to set interface implementers for it. By default, each account is its own manager. Passing a value of `0x0` in `newManager` will reset the manager to this initial state. Emits a {ManagerChanged} event. Requirements: - the caller must be the current manager for `account`."
							},
							"updateERC165Cache(address,bytes4)": {
								"params": {
									"account": "Address of the contract for which to update the cache.",
									"interfaceId": "ERC165 interface for which to update the cache."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getInterfaceImplementer(address,bytes32)": "aabbb8ca",
							"getManager(address)": "3d584063",
							"implementsERC165Interface(address,bytes4)": "f712f3e8",
							"implementsERC165InterfaceNoCache(address,bytes4)": "b7056765",
							"interfaceHash(string)": "65ba36c1",
							"setInterfaceImplementer(address,bytes32,address)": "29965a1d",
							"setManager(address,address)": "5df8122f",
							"updateERC165Cache(address,bytes4)": "a41e7d51"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"InterfaceImplementerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"ManagerChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"interfaceHash\",\"type\":\"bytes32\"}],\"name\":\"getInterfaceImplementer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"implementsERC165Interface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"implementsERC165InterfaceNoCache\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"interfaceName\",\"type\":\"string\"}],\"name\":\"interfaceHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"setInterfaceImplementer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"updateERC165Cache\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the global ERC1820 Registry, as defined in the https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register implementers for interfaces in this registry, as well as query support. Implementers may be shared by multiple accounts, and can also implement more than a single interface for each account. Contracts can implement interfaces for themselves, but externally-owned accounts (EOA) must delegate this to a contract. {IERC165} interfaces can also be queried via the registry. For an in-depth explanation and source code analysis, see the EIP text.\",\"kind\":\"dev\",\"methods\":{\"getInterfaceImplementer(address,bytes32)\":{\"details\":\"Returns the implementer of `interfaceHash` for `account`. If no such implementer is registered, returns the zero address. If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28 zeroes), `account` will be queried for support of it. `account` being the zero address is an alias for the caller's address.\"},\"getManager(address)\":{\"details\":\"Returns the manager for `account`. See {setManager}.\"},\"implementsERC165Interface(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract to check.\",\"interfaceId\":\"ERC165 interface to check.\"},\"returns\":{\"_0\":\"True if `account` implements `interfaceId`, false otherwise.\"}},\"implementsERC165InterfaceNoCache(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract to check.\",\"interfaceId\":\"ERC165 interface to check.\"},\"returns\":{\"_0\":\"True if `account` implements `interfaceId`, false otherwise.\"}},\"interfaceHash(string)\":{\"details\":\"Returns the interface hash for an `interfaceName`, as defined in the corresponding https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP].\"},\"setInterfaceImplementer(address,bytes32,address)\":{\"details\":\"Sets the `implementer` contract as ``account``'s implementer for `interfaceHash`. `account` being the zero address is an alias for the caller's address. The zero address can also be used in `implementer` to remove an old one. See {interfaceHash} to learn how these are created. Emits an {InterfaceImplementerSet} event. Requirements: - the caller must be the current manager for `account`. - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not end in 28 zeroes). - `implementer` must implement {IERC1820Implementer} and return true when queried for support, unless `implementer` is the caller. See {IERC1820Implementer-canImplementInterfaceForAddress}.\"},\"setManager(address,address)\":{\"details\":\"Sets `newManager` as the manager for `account`. A manager of an account is able to set interface implementers for it. By default, each account is its own manager. Passing a value of `0x0` in `newManager` will reset the manager to this initial state. Emits a {ManagerChanged} event. Requirements: - the caller must be the current manager for `account`.\"},\"updateERC165Cache(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract for which to update the cache.\",\"interfaceId\":\"ERC165 interface for which to update the cache.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"implementsERC165Interface(address,bytes4)\":{\"notice\":\"Checks whether a contract implements an ERC165 interface or not.  If the result is not cached a direct lookup on the contract address is performed.  If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling  {updateERC165Cache} with the contract address.\"},\"implementsERC165InterfaceNoCache(address,bytes4)\":{\"notice\":\"Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\"},\"updateERC165Cache(address,bytes4)\":{\"notice\":\"Updates the cache with whether the contract implements an ERC165 interface or not.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-ethereum-package/contracts/introspection/IERC1820Registry.sol\":\"IERC1820Registry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-ethereum-package/contracts/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0xf96602898a507855ea4a0b3a2576e787433a9bba9ca555fadf16ffc03d15a6fe\",\"urls\":[\"bzz-raw://c0c91309e54b8196c8d673287e075cb923be200e0afecbb25444196cde1253a7\",\"dweb:/ipfs/QmRtdoebQbz8Q19zwVC3q3CDWZE7mrMy7mmjG6oyks136C\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"implementsERC165Interface(address,bytes4)": {
								"notice": "Checks whether a contract implements an ERC165 interface or not.  If the result is not cached a direct lookup on the contract address is performed.  If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling  {updateERC165Cache} with the contract address."
							},
							"implementsERC165InterfaceNoCache(address,bytes4)": {
								"notice": "Checks whether a contract implements an ERC165 interface or not without using nor updating the cache."
							},
							"updateERC165Cache(address,bytes4)": {
								"notice": "Updates the cache with whether the contract implements an ERC165 interface or not."
							}
						},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777.sol": {
				"IERC777": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "AuthorizedOperator",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Burned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Minted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "RevokedOperator",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Sent",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "authorizeOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "defaultOperators",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "granularity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "isOperatorFor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "operatorBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "operatorSend",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "revokeOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "send",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC777Token standard as defined in the EIP. This contract uses the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let token holders and recipients react to token movements by using setting implementers for the associated interfaces in said registry. See {IERC1820Registry} and {ERC1820Implementer}.",
						"kind": "dev",
						"methods": {
							"authorizeOperator(address)": {
								"details": "Make an account an operator of the caller. See {isOperatorFor}. Emits an {AuthorizedOperator} event. Requirements - `operator` cannot be calling address."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by an account (`owner`)."
							},
							"burn(uint256,bytes)": {
								"details": "Destroys `amount` tokens from the caller's account, reducing the total supply. If a send hook is registered for the caller, the corresponding function will be called with `data` and empty `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - the caller must have at least `amount` tokens."
							},
							"defaultOperators()": {
								"details": "Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false."
							},
							"granularity()": {
								"details": "Returns the smallest part of the token that is not divisible. This means all token operations (creation, movement and destruction) must have amounts that are a multiple of this number. For most token contracts, this value will equal 1."
							},
							"isOperatorFor(address,address)": {
								"details": "Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"operatorBurn(address,uint256,bytes,bytes)": {
								"details": "Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `data` and `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - `account` cannot be the zero address. - `account` must have at least `amount` tokens. - the caller must be an operator for `account`."
							},
							"operatorSend(address,address,uint256,bytes,bytes)": {
								"details": "Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `data` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - `sender` cannot be the zero address. - `sender` must have at least `amount` tokens. - the caller must be an operator for `sender`. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface."
							},
							"revokeOperator(address)": {
								"details": "Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}. Emits a {RevokedOperator} event. Requirements - `operator` cannot be calling address."
							},
							"send(address,uint256,bytes)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. If send or receive hooks are registered for the caller and `recipient`, the corresponding functions will be called with `data` and empty `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - the caller must have at least `amount` tokens. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"authorizeOperator(address)": "959b8c3f",
							"balanceOf(address)": "70a08231",
							"burn(uint256,bytes)": "fe9d9303",
							"defaultOperators()": "06e48538",
							"granularity()": "556f0dc7",
							"isOperatorFor(address,address)": "d95b6371",
							"name()": "06fdde03",
							"operatorBurn(address,uint256,bytes,bytes)": "fc673c4f",
							"operatorSend(address,address,uint256,bytes,bytes)": "62ad1b83",
							"revokeOperator(address)": "fad8b32a",
							"send(address,uint256,bytes)": "9bd9bbc6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOperators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC777Token standard as defined in the EIP. This contract uses the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let token holders and recipients react to token movements by using setting implementers for the associated interfaces in said registry. See {IERC1820Registry} and {ERC1820Implementer}.\",\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address)\":{\"details\":\"Make an account an operator of the caller. See {isOperatorFor}. Emits an {AuthorizedOperator} event. Requirements - `operator` cannot be calling address.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by an account (`owner`).\"},\"burn(uint256,bytes)\":{\"details\":\"Destroys `amount` tokens from the caller's account, reducing the total supply. If a send hook is registered for the caller, the corresponding function will be called with `data` and empty `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - the caller must have at least `amount` tokens.\"},\"defaultOperators()\":{\"details\":\"Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false.\"},\"granularity()\":{\"details\":\"Returns the smallest part of the token that is not divisible. This means all token operations (creation, movement and destruction) must have amounts that are a multiple of this number. For most token contracts, this value will equal 1.\"},\"isOperatorFor(address,address)\":{\"details\":\"Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"operatorBurn(address,uint256,bytes,bytes)\":{\"details\":\"Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `data` and `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - `account` cannot be the zero address. - `account` must have at least `amount` tokens. - the caller must be an operator for `account`.\"},\"operatorSend(address,address,uint256,bytes,bytes)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `data` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - `sender` cannot be the zero address. - `sender` must have at least `amount` tokens. - the caller must be an operator for `sender`. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\"},\"revokeOperator(address)\":{\"details\":\"Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}. Emits a {RevokedOperator} event. Requirements - `operator` cannot be calling address.\"},\"send(address,uint256,bytes)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. If send or receive hooks are registered for the caller and `recipient`, the corresponding functions will be called with `data` and empty `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - the caller must have at least `amount` tokens. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777.sol\":\"IERC777\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x5d9e02a26cd8ae92627495d65becc3e122e6eef07ed5911db3cdbf168c3f59fa\",\"urls\":[\"bzz-raw://89915e83a2ea29fdbc5ea02e44af9d46297a24d4e0ad5987cdd4c77043381926\",\"dweb:/ipfs/QmcLDNa8JKRmz4Mdk7ozbssLuEsAFgapRYnyHJFY7nKarS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777Recipient.sol": {
				"IERC777Recipient": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "userData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "tokensReceived",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC777TokensRecipient standard as defined in the EIP. Accounts can be notified of {IERC777} tokens being sent to them by having a contract implement this interface (contract holders can be their own implementer) and registering it on the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry]. See {IERC1820Registry} and {ERC1820Implementer}.",
						"kind": "dev",
						"methods": {
							"tokensReceived(address,address,address,uint256,bytes,bytes)": {
								"details": "Called by an {IERC777} token contract whenever tokens are being moved or created into a registered account (`to`). The type of operation is conveyed by `from` being the zero address or not. This call occurs _after_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the post-operation state. This function may revert to prevent the operation from being executed."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"tokensReceived(address,address,address,uint256,bytes,bytes)": "0023de29"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC777TokensRecipient standard as defined in the EIP. Accounts can be notified of {IERC777} tokens being sent to them by having a contract implement this interface (contract holders can be their own implementer) and registering it on the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry]. See {IERC1820Registry} and {ERC1820Implementer}.\",\"kind\":\"dev\",\"methods\":{\"tokensReceived(address,address,address,uint256,bytes,bytes)\":{\"details\":\"Called by an {IERC777} token contract whenever tokens are being moved or created into a registered account (`to`). The type of operation is conveyed by `from` being the zero address or not. This call occurs _after_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the post-operation state. This function may revert to prevent the operation from being executed.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777Recipient.sol\":\"IERC777Recipient\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x55a013725aefc9de0c0f6fca871e7edef78ff30481175461f4e06cdcd20bf72a\",\"urls\":[\"bzz-raw://aafc7a28a5ae7e262eff992659b2757b1f334cdb6b2a95854431235ef66b2e5e\",\"dweb:/ipfs/QmTGpPsKN3NPDjjpLNdyUYk245jNG1Rp7cG7XYozpkJ5FS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/mytest2/ERC770.sol": {
				"Merit": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC777",
									"name": "token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "givers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "userData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "tokensReceived",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"tokensReceived(address,address,address,uint256,bytes,bytes)": {
								"details": "Called by an {IERC777} token contract whenever tokens are being moved or created into a registered account (`to`). The type of operation is conveyed by `from` being the zero address or not. This call occurs _after_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the post-operation state. This function may revert to prevent the operation from being executed."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/mytest2/ERC770.sol\":550:1624  contract Merit is IERC777Recipient {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/mytest2/ERC770.sol\":732:774  0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24 */\n  0x1820a4b7618bde71dce8cdc73aab6c95905fad24\n    /* \"contracts/mytest2/ERC770.sol\":679:775  IERC1820Registry private _erc1820 = IERC1820Registry(0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24) */\n  0x03\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/mytest2/ERC770.sol\":916:1119  constructor(IERC777 token) public {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x20\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/mytest2/ERC770.sol\":961:969  _erc1820 */\n  0x03\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/mytest2/ERC770.sol\":961:993  _erc1820.setInterfaceImplementer */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x29965a1d\n    /* \"contracts/mytest2/ERC770.sol\":1002:1006  this */\n  address\n    /* \"contracts/mytest2/ERC770.sol\":843:909  0xb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b */\n  0xb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b\n    /* \"contracts/mytest2/ERC770.sol\":1009:1040  TOKENS_RECIPIENT_INTERFACE_HASH */\n  0x00\n  shl\n    /* \"contracts/mytest2/ERC770.sol\":1050:1054  this */\n  address\n    /* \"contracts/mytest2/ERC770.sol\":961:1056  _erc1820.setInterfaceImplementer(address(this), TOKENS_RECIPIENT_INTERFACE_HASH, address(this)) */\n  mload(0x40)\n  dup5\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup5\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  dup4\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap4\n  pop\n  pop\n  pop\n  pop\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  pop\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_7\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_7:\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/mytest2/ERC770.sol\":1076:1086  msg.sender */\n  caller\n    /* \"contracts/mytest2/ERC770.sol\":1067:1073  _owner */\n  0x01\n  0x00\n    /* \"contracts/mytest2/ERC770.sol\":1067:1086  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/mytest2/ERC770.sol\":1106:1111  token */\n  dup1\n    /* \"contracts/mytest2/ERC770.sol\":1097:1103  _token */\n  0x02\n  0x00\n    /* \"contracts/mytest2/ERC770.sol\":1097:1111  _token = token */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/mytest2/ERC770.sol\":916:1119  constructor(IERC777 token) public {\r... */\n  pop\n    /* \"contracts/mytest2/ERC770.sol\":550:1624  contract Merit is IERC777Recipient {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/mytest2/ERC770.sol\":550:1624  contract Merit is IERC777Recipient {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x23de29\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe89081f8\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/mytest2/ERC770.sol\":1125:1382  function tokensReceived  (\r... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      0xc0\n      dup2\n      lt\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      swap1\n      swap2\n      swap3\n      swap4\n      swap2\n      swap3\n      swap4\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      swap1\n      swap2\n      swap3\n      swap4\n      swap2\n      swap3\n      swap4\n      swap1\n      pop\n      pop\n      pop\n      tag_14\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contracts/mytest2/ERC770.sol\":1427:1621  function withdraw() external {\r... */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"contracts/mytest2/ERC770.sol\":592:630  mapping(address => uint) public givers */\n    tag_5:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_19\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mytest2/ERC770.sol\":1125:1382  function tokensReceived  (\r... */\n    tag_14:\n        /* \"contracts/mytest2/ERC770.sol\":1368:1374  amount */\n      dup5\n        /* \"contracts/mytest2/ERC770.sol\":1352:1358  givers */\n      0x00\n        /* \"contracts/mytest2/ERC770.sol\":1352:1364  givers[from] */\n      dup1\n        /* \"contracts/mytest2/ERC770.sol\":1359:1363  from */\n      dup10\n        /* \"contracts/mytest2/ERC770.sol\":1352:1364  givers[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/mytest2/ERC770.sol\":1352:1374  givers[from] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/mytest2/ERC770.sol\":1125:1382  function tokensReceived  (\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/mytest2/ERC770.sol\":1427:1621  function withdraw() external {\r... */\n    tag_16:\n        /* \"contracts/mytest2/ERC770.sol\":1489:1495  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/mytest2/ERC770.sol\":1475:1495  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/mytest2/ERC770.sol\":1475:1485  msg.sender */\n      caller\n        /* \"contracts/mytest2/ERC770.sol\":1475:1495  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/mytest2/ERC770.sol\":1467:1513  require(msg.sender == _owner, \"no permission\") */\n      tag_22\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6e6f207065726d697373696f6e00000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_22:\n        /* \"contracts/mytest2/ERC770.sol\":1524:1536  uint balance */\n      0x00\n        /* \"contracts/mytest2/ERC770.sol\":1539:1545  _token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/mytest2/ERC770.sol\":1539:1555  _token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/mytest2/ERC770.sol\":1564:1568  this */\n      address\n        /* \"contracts/mytest2/ERC770.sol\":1539:1570  _token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_25\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_25:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/mytest2/ERC770.sol\":1524:1570  uint balance = _token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/mytest2/ERC770.sol\":1581:1587  _token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/mytest2/ERC770.sol\":1581:1592  _token.send */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9bd9bbc6\n        /* \"contracts/mytest2/ERC770.sol\":1593:1599  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/mytest2/ERC770.sol\":1601:1608  balance */\n      dup4\n        /* \"contracts/mytest2/ERC770.sol\":1581:1613  _token.send(_owner, balance, \"\") */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_29\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_29:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/mytest2/ERC770.sol\":1427:1621  function withdraw() external {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/mytest2/ERC770.sol\":592:630  mapping(address => uint) public givers */\n    tag_19:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n\n    auxdata: 0xa264697066735822122046e30037da23db9680dea7fa62bc81bd6eaf14cc497fbe0be75f2574edfd34a164736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052731820a4b7618bde71dce8cdc73aab6c95905fad24600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006557600080fd5b506040516107093803806107098339818101604052602081101561008857600080fd5b8101908080519060200190929190505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166329965a1d307fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b60001b306040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019350505050600060405180830381600087803b15801561016d57600080fd5b505af1158015610181573d6000803e3d6000fd5b5050505033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506104f2806102176000396000f3fe608060405234801561001057600080fd5b50600436106100405760003560e01c806223de29146100455780633ccfd60b1461017d578063e89081f814610187575b600080fd5b61017b600480360360c081101561005b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156100e257600080fd5b8201836020820111156100f457600080fd5b8035906020019184600183028401116401000000008311171561011657600080fd5b90919293919293908035906020019064010000000081111561013757600080fd5b82018360208201111561014957600080fd5b8035906020019184600183028401116401000000008311171561016b57600080fd5b90919293919293905050506101df565b005b610185610235565b005b6101c96004803603602081101561019d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104a4565b6040518082815260200191505060405180910390f35b846000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505050505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102f8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6e6f207065726d697373696f6e0000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561038357600080fd5b505afa158015610397573d6000803e3d6000fd5b505050506040513d60208110156103ad57600080fd5b81019080805190602001909291905050509050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639bd9bbc6600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff168152602001828152602001806020018281038252600081526020016020019350505050600060405180830381600087803b15801561048957600080fd5b505af115801561049d573d6000803e3d6000fd5b5050505050565b6000602052806000526040600020600091509050548156fea264697066735822122046e30037da23db9680dea7fa62bc81bd6eaf14cc497fbe0be75f2574edfd34a164736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x709 CODESIZE SUB DUP1 PUSH2 0x709 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x29965A1D ADDRESS PUSH32 0xB281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B PUSH1 0x0 SHL ADDRESS PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x181 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x4F2 DUP1 PUSH2 0x217 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x40 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x23DE29 EQ PUSH2 0x45 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xE89081F8 EQ PUSH2 0x187 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0x1DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x185 PUSH2 0x235 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP5 PUSH1 0x0 DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E6F207065726D697373696F6E00000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x383 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x397 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9BD9BBC6 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x49D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID 0xE3 STOP CALLDATACOPY 0xDA 0x23 0xDB SWAP7 DUP1 0xDE 0xA7 STATICCALL PUSH3 0xBC81BD PUSH15 0xAF14CC497FBE0BE75F2574EDFD34A1 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "550:1074:3:-:0;;;732:42;679:96;;;;;;;;;;;;;;;;;;;;916:203;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;961:8;;;;;;;;;;;:32;;;1002:4;843:66;1009:31;;1050:4;961:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1076:10;1067:6;;:19;;;;;;;;;;;;;;;;;;1106:5;1097:6;;:14;;;;;;;;;;;;;;;;;;916:203;550:1074;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100405760003560e01c806223de29146100455780633ccfd60b1461017d578063e89081f814610187575b600080fd5b61017b600480360360c081101561005b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156100e257600080fd5b8201836020820111156100f457600080fd5b8035906020019184600183028401116401000000008311171561011657600080fd5b90919293919293908035906020019064010000000081111561013757600080fd5b82018360208201111561014957600080fd5b8035906020019184600183028401116401000000008311171561016b57600080fd5b90919293919293905050506101df565b005b610185610235565b005b6101c96004803603602081101561019d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104a4565b6040518082815260200191505060405180910390f35b846000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505050505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102f8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6e6f207065726d697373696f6e0000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561038357600080fd5b505afa158015610397573d6000803e3d6000fd5b505050506040513d60208110156103ad57600080fd5b81019080805190602001909291905050509050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639bd9bbc6600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff168152602001828152602001806020018281038252600081526020016020019350505050600060405180830381600087803b15801561048957600080fd5b505af115801561049d573d6000803e3d6000fd5b5050505050565b6000602052806000526040600020600091509050548156fea264697066735822122046e30037da23db9680dea7fa62bc81bd6eaf14cc497fbe0be75f2574edfd34a164736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x40 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x23DE29 EQ PUSH2 0x45 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xE89081F8 EQ PUSH2 0x187 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0x1DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x185 PUSH2 0x235 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP5 PUSH1 0x0 DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E6F207065726D697373696F6E00000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x383 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x397 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9BD9BBC6 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x49D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID 0xE3 STOP CALLDATACOPY 0xDA 0x23 0xDB SWAP7 DUP1 0xDE 0xA7 STATICCALL PUSH3 0xBC81BD PUSH15 0xAF14CC497FBE0BE75F2574EDFD34A1 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "550:1074:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1125:257;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1427:194;;;:::i;:::-;;592:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1125:257;1368:6;1352;:12;1359:4;1352:12;;;;;;;;;;;;;;;;:22;;;;;;;;;;;1125:257;;;;;;;;:::o;1427:194::-;1489:6;;;;;;;;;;;1475:20;;:10;:20;;;1467:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1524:12;1539:6;;;;;;;;;;;:16;;;1564:4;1539:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1524:46;;1581:6;;;;;;;;;;;:11;;;1593:6;;;;;;;;;;;1601:7;1581:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1427:194;:::o;592:38::-;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "253200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"givers(address)": "1191",
								"tokensReceived(address,address,address,uint256,bytes,bytes)": "21594",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 550,
									"end": 1624,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 550,
									"end": 1624,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 550,
									"end": 1624,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 732,
									"end": 774,
									"name": "PUSH",
									"source": 3,
									"value": "1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24"
								},
								{
									"begin": 679,
									"end": 775,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 679,
									"end": 775,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 679,
									"end": 775,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 679,
									"end": 775,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 679,
									"end": 775,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 679,
									"end": 775,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 679,
									"end": 775,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 679,
									"end": 775,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 679,
									"end": 775,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 679,
									"end": 775,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 679,
									"end": 775,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 679,
									"end": 775,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 679,
									"end": 775,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 679,
									"end": 775,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 679,
									"end": 775,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 679,
									"end": 775,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 679,
									"end": 775,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 679,
									"end": 775,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 679,
									"end": 775,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 679,
									"end": 775,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 961,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 961,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 961,
									"end": 969,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 961,
									"end": 969,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 961,
									"end": 969,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 961,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 961,
									"end": 969,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 961,
									"end": 969,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 961,
									"end": 969,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 961,
									"end": 969,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 961,
									"end": 969,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 961,
									"end": 993,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 961,
									"end": 993,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 961,
									"end": 993,
									"name": "PUSH",
									"source": 3,
									"value": "29965A1D"
								},
								{
									"begin": 1002,
									"end": 1006,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 843,
									"end": 909,
									"name": "PUSH",
									"source": 3,
									"value": "B281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B"
								},
								{
									"begin": 1009,
									"end": 1040,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1009,
									"end": 1040,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1050,
									"end": 1054,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "PUSH",
									"source": 3,
									"value": "E0"
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "EXTCODESIZE",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "tag",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "GAS",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "CALL",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "RETURNDATACOPY",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 961,
									"end": 1056,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1076,
									"end": 1086,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 1067,
									"end": 1073,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1067,
									"end": 1073,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1067,
									"end": 1086,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1067,
									"end": 1086,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1067,
									"end": 1086,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1067,
									"end": 1086,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1067,
									"end": 1086,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1067,
									"end": 1086,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1067,
									"end": 1086,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1067,
									"end": 1086,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1067,
									"end": 1086,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1067,
									"end": 1086,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1067,
									"end": 1086,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1067,
									"end": 1086,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1067,
									"end": 1086,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1067,
									"end": 1086,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1067,
									"end": 1086,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1067,
									"end": 1086,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1067,
									"end": 1086,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1067,
									"end": 1086,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1106,
									"end": 1111,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1097,
									"end": 1103,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1097,
									"end": 1103,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1097,
									"end": 1111,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1097,
									"end": 1111,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1097,
									"end": 1111,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1097,
									"end": 1111,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1097,
									"end": 1111,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1097,
									"end": 1111,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1097,
									"end": 1111,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1097,
									"end": 1111,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1097,
									"end": 1111,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1097,
									"end": 1111,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1097,
									"end": 1111,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1097,
									"end": 1111,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1097,
									"end": 1111,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1097,
									"end": 1111,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1097,
									"end": 1111,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1097,
									"end": 1111,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1097,
									"end": 1111,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1097,
									"end": 1111,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 916,
									"end": 1119,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 550,
									"end": 1624,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 550,
									"end": 1624,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 550,
									"end": 1624,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 550,
									"end": 1624,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 550,
									"end": 1624,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 550,
									"end": 1624,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 550,
									"end": 1624,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122046e30037da23db9680dea7fa62bc81bd6eaf14cc497fbe0be75f2574edfd34a164736f6c634300060c0033",
									".code": [
										{
											"begin": 550,
											"end": 1624,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "PUSH",
											"source": 3,
											"value": "23DE29"
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "PUSH",
											"source": 3,
											"value": "3CCFD60B"
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "PUSH",
											"source": 3,
											"value": "E89081F8"
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 550,
											"end": 1624,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "PUSH",
											"source": 3,
											"value": "100000000"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "PUSH",
											"source": 3,
											"value": "100000000"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "PUSH",
											"source": 3,
											"value": "100000000"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "PUSH",
											"source": 3,
											"value": "100000000"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1621,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1427,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1427,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1427,
											"end": 1621,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1427,
											"end": 1621,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1427,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1621,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 592,
											"end": 630,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 592,
											"end": 630,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 592,
											"end": 630,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 592,
											"end": 630,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 592,
											"end": 630,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 630,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 592,
											"end": 630,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 592,
											"end": 630,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 592,
											"end": 630,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 592,
											"end": 630,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 592,
											"end": 630,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 592,
											"end": 630,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 592,
											"end": 630,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 592,
											"end": 630,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 592,
											"end": 630,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1368,
											"end": 1374,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1358,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1364,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1363,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1364,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1352,
											"end": 1364,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1364,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1352,
											"end": 1364,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1364,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1364,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1364,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1364,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1364,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1364,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1364,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1364,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1364,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1364,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1364,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1374,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1374,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1374,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1374,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1374,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1374,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1374,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1374,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1374,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1374,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1374,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1382,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1427,
											"end": 1621,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1427,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1495,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1489,
											"end": 1495,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1489,
											"end": 1495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1495,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1495,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1489,
											"end": 1495,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1495,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1495,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1489,
											"end": 1495,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1495,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1475,
											"end": 1495,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1485,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1495,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1475,
											"end": 1495,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1475,
											"end": 1495,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "PUSH",
											"source": 3,
											"value": "6E6F207065726D697373696F6E00000000000000000000000000000000000000"
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1467,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1536,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1545,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1539,
											"end": 1545,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1545,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1545,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1545,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1545,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1539,
											"end": 1545,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1545,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1545,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1545,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1539,
											"end": 1545,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 1564,
											"end": 1568,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1570,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1570,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1587,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1581,
											"end": 1587,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1581,
											"end": 1587,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1587,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1587,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1587,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1581,
											"end": 1587,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1587,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1587,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1587,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1581,
											"end": 1587,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1592,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1581,
											"end": 1592,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1592,
											"name": "PUSH",
											"source": 3,
											"value": "9BD9BBC6"
										},
										{
											"begin": 1593,
											"end": 1599,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1593,
											"end": 1599,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1599,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1593,
											"end": 1599,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1593,
											"end": 1599,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1593,
											"end": 1599,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1593,
											"end": 1599,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1593,
											"end": 1599,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1593,
											"end": 1599,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1593,
											"end": 1599,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1593,
											"end": 1599,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1601,
											"end": 1608,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1613,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1621,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1621,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 592,
											"end": 630,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 592,
											"end": 630,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 630,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 592,
											"end": 630,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 630,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 592,
											"end": 630,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 630,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 630,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 592,
											"end": 630,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"givers(address)": "e89081f8",
							"tokensReceived(address,address,address,uint256,bytes,bytes)": "0023de29",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC777\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"givers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"tokensReceived(address,address,address,uint256,bytes,bytes)\":{\"details\":\"Called by an {IERC777} token contract whenever tokens are being moved or created into a registered account (`to`). The type of operation is conveyed by `from` being the zero address or not. This call occurs _after_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the post-operation state. This function may revert to prevent the operation from being executed.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mytest2/ERC770.sol\":\"Merit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-ethereum-package/contracts/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0xf96602898a507855ea4a0b3a2576e787433a9bba9ca555fadf16ffc03d15a6fe\",\"urls\":[\"bzz-raw://c0c91309e54b8196c8d673287e075cb923be200e0afecbb25444196cde1253a7\",\"dweb:/ipfs/QmRtdoebQbz8Q19zwVC3q3CDWZE7mrMy7mmjG6oyks136C\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x5d9e02a26cd8ae92627495d65becc3e122e6eef07ed5911db3cdbf168c3f59fa\",\"urls\":[\"bzz-raw://89915e83a2ea29fdbc5ea02e44af9d46297a24d4e0ad5987cdd4c77043381926\",\"dweb:/ipfs/QmcLDNa8JKRmz4Mdk7ozbssLuEsAFgapRYnyHJFY7nKarS\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x55a013725aefc9de0c0f6fca871e7edef78ff30481175461f4e06cdcd20bf72a\",\"urls\":[\"bzz-raw://aafc7a28a5ae7e262eff992659b2757b1f334cdb6b2a95854431235ef66b2e5e\",\"dweb:/ipfs/QmTGpPsKN3NPDjjpLNdyUYk245jNG1Rp7cG7XYozpkJ5FS\"]},\"contracts/mytest2/ERC770.sol\":{\"keccak256\":\"0x82e8850af9e9f82a05a812b38002a319db21fc971f605c102ce96bc33f51f28c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80de556de2dc973ae074b4661e9101c6714602fcce3c68a15d1edb1a78ceee27\",\"dweb:/ipfs/QmXRS1LRiDZqcB2BQUqiK1gYSNm5wL1JjyNT5iBaEFgBDo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "contracts/mytest2/ERC770.sol:Merit",
								"label": "givers",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 281,
								"contract": "contracts/mytest2/ERC770.sol:Merit",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 283,
								"contract": "contracts/mytest2/ERC770.sol:Merit",
								"label": "_token",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC777)248"
							},
							{
								"astId": 288,
								"contract": "contracts/mytest2/ERC770.sol:Merit",
								"label": "_erc1820",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC1820Registry)89"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC1820Registry)89": {
								"encoding": "inplace",
								"label": "contract IERC1820Registry",
								"numberOfBytes": "20"
							},
							"t_contract(IERC777)248": {
								"encoding": "inplace",
								"label": "contract IERC777",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "@openzeppelin/contracts-ethereum-package/contracts/introspection/IERC1820Registry.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "@openzeppelin/contracts-ethereum-package/contracts/introspection/IERC1820Registry.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777Recipient.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777Recipient.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "contracts/mytest2/ERC770.sol:24:9: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n        address operator,\n        ^--------------^\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1177,
					"file": "contracts/mytest2/ERC770.sol",
					"start": 1161
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "contracts/mytest2/ERC770.sol:26:9: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n        address to,\n        ^--------^\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1221,
					"file": "contracts/mytest2/ERC770.sol",
					"start": 1211
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "contracts/mytest2/ERC770.sol:28:9: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n        bytes calldata userData,\n        ^---------------------^\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1277,
					"file": "contracts/mytest2/ERC770.sol",
					"start": 1254
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "contracts/mytest2/ERC770.sol:29:9: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n        bytes calldata operatorData\n        ^-------------------------^\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1315,
					"file": "contracts/mytest2/ERC770.sol",
					"start": 1288
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts-ethereum-package/contracts/introspection/IERC1820Registry.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/introspection/IERC1820Registry.sol",
					"exportedSymbols": {
						"IERC1820Registry": [
							89
						]
					},
					"id": 90,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "25:619:0",
								"text": " @dev Interface of the global ERC1820 Registry, as defined in the\n https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register\n implementers for interfaces in this registry, as well as query support.\n Implementers may be shared by multiple accounts, and can also implement more\n than a single interface for each account. Contracts can implement interfaces\n for themselves, but externally-owned accounts (EOA) must delegate this to a\n contract.\n {IERC165} interfaces can also be queried via the registry.\n For an in-depth explanation and source code analysis, see the EIP text."
							},
							"fullyImplemented": false,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC1820Registry",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "678:445:0",
										"text": " @dev Sets `newManager` as the manager for `account`. A manager of an\n account is able to set interface implementers for it.\n By default, each account is its own manager. Passing a value of `0x0` in\n `newManager` will reset the manager to this initial state.\n Emits a {ManagerChanged} event.\n Requirements:\n - the caller must be the current manager for `account`."
									},
									"functionSelector": "5df8122f",
									"id": 10,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setManager",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 10,
												"src": "1148:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1148:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "newManager",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 10,
												"src": "1165:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1165:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1147:37:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1193:0:0"
									},
									"scope": 89,
									"src": "1128:66:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "1200:90:0",
										"text": " @dev Returns the manager for `account`.\n See {setManager}."
									},
									"functionSelector": "3d584063",
									"id": 18,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getManager",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 18,
												"src": "1315:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1315:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1314:17:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 18,
												"src": "1355:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1354:9:0"
									},
									"scope": 89,
									"src": "1295:69:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1370:815:0",
										"text": " @dev Sets the `implementer` contract as ``account``'s implementer for\n `interfaceHash`.\n `account` being the zero address is an alias for the caller's address.\n The zero address can also be used in `implementer` to remove an old one.\n See {interfaceHash} to learn how these are created.\n Emits an {InterfaceImplementerSet} event.\n Requirements:\n - the caller must be the current manager for `account`.\n - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not\n end in 28 zeroes).\n - `implementer` must implement {IERC1820Implementer} and return true when\n queried for support, unless `implementer` is the caller. See\n {IERC1820Implementer-canImplementInterfaceForAddress}."
									},
									"functionSelector": "29965a1d",
									"id": 28,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setInterfaceImplementer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 28,
												"src": "2223:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2223:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "interfaceHash",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 28,
												"src": "2240:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 22,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "implementer",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 28,
												"src": "2263:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2263:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2222:61:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2292:0:0"
									},
									"scope": 89,
									"src": "2190:103:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "2299:382:0",
										"text": " @dev Returns the implementer of `interfaceHash` for `account`. If no such\n implementer is registered, returns the zero address.\n If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28\n zeroes), `account` will be queried for support of it.\n `account` being the zero address is an alias for the caller's address."
									},
									"functionSelector": "aabbb8ca",
									"id": 38,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getInterfaceImplementer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 38,
												"src": "2719:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "interfaceHash",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 38,
												"src": "2736:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 32,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2736:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2718:40:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 38,
												"src": "2782:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2782:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2781:9:0"
									},
									"scope": 89,
									"src": "2686:105:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "2797:196:0",
										"text": " @dev Returns the interface hash for an `interfaceName`, as defined in the\n corresponding\n https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP]."
									},
									"functionSelector": "65ba36c1",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "interfaceHash",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "interfaceName",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 46,
												"src": "3021:29:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 40,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3021:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3020:31:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 46,
												"src": "3075:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 43,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3074:9:0"
									},
									"scope": 89,
									"src": "2998:86:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "3090:263:0",
										"text": "  @notice Updates the cache with whether the contract implements an ERC165 interface or not.\n  @param account Address of the contract for which to update the cache.\n  @param interfaceId ERC165 interface for which to update the cache."
									},
									"functionSelector": "a41e7d51",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateERC165Cache",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 54,
												"src": "3385:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3385:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "interfaceId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 54,
												"src": "3402:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 50,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3402:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3384:37:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3430:0:0"
									},
									"scope": 89,
									"src": "3358:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "3437:543:0",
										"text": "  @notice Checks whether a contract implements an ERC165 interface or not.\n  If the result is not cached a direct lookup on the contract address is performed.\n  If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\n  {updateERC165Cache} with the contract address.\n  @param account Address of the contract to check.\n  @param interfaceId ERC165 interface to check.\n  @return True if `account` implements `interfaceId`, false otherwise."
									},
									"functionSelector": "f712f3e8",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementsERC165Interface",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 64,
												"src": "4020:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4020:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "interfaceId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 64,
												"src": "4037:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 58,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "4037:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4019:37:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 64,
												"src": "4080:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4080:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4079:6:0"
									},
									"scope": 89,
									"src": "3985:101:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "4092:317:0",
										"text": "  @notice Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\n  @param account Address of the contract to check.\n  @param interfaceId ERC165 interface to check.\n  @return True if `account` implements `interfaceId`, false otherwise."
									},
									"functionSelector": "b7056765",
									"id": 74,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementsERC165InterfaceNoCache",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 74,
												"src": "4456:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4456:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "interfaceId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 74,
												"src": "4473:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 68,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "4473:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4455:37:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 74,
												"src": "4516:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 71,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4516:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4515:6:0"
									},
									"scope": 89,
									"src": "4414:108:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 82,
									"name": "InterfaceImplementerSet",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 82,
												"src": "4558:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4558:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"indexed": true,
												"mutability": "mutable",
												"name": "interfaceHash",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 82,
												"src": "4583:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 77,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4583:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementer",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 82,
												"src": "4614:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4614:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4557:85:0"
									},
									"src": "4528:115:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 88,
									"name": "ManagerChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 88,
												"src": "4670:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"indexed": true,
												"mutability": "mutable",
												"name": "newManager",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 88,
												"src": "4695:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4669:53:0"
									},
									"src": "4649:74:0"
								}
							],
							"scope": 90,
							"src": "645:4080:0"
						}
					],
					"src": "0:4726:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777.sol",
					"exportedSymbols": {
						"IERC777": [
							248
						]
					},
					"id": 249,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 91,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 92,
								"nodeType": "StructuredDocumentation",
								"src": "25:372:1",
								"text": " @dev Interface of the ERC777Token standard as defined in the EIP.\n This contract uses the\n https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let\n token holders and recipients react to token movements by using setting implementers\n for the associated interfaces in said registry. See {IERC1820Registry} and\n {ERC1820Implementer}."
							},
							"fullyImplemented": false,
							"id": 248,
							"linearizedBaseContracts": [
								248
							],
							"name": "IERC777",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "422:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "494:2:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 98,
												"src": "520:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 95,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "520:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "519:15:1"
									},
									"scope": 248,
									"src": "481:54:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "541:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "663:2:1"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 104,
												"src": "689:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 101,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "689:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "688:15:1"
									},
									"scope": 248,
									"src": "648:56:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "710:287:1",
										"text": " @dev Returns the smallest part of the token that is not divisible. This\n means all token operations (creation, movement and destruction) must have\n amounts that are a multiple of this number.\n For most token contracts, this value will equal 1."
									},
									"functionSelector": "556f0dc7",
									"id": 110,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "granularity",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1022:2:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 110,
												"src": "1048:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1048:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1047:9:1"
									},
									"scope": 248,
									"src": "1002:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "1063:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1154:2:1"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 116,
												"src": "1180:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1180:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1179:9:1"
									},
									"scope": 248,
									"src": "1134:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "1195:83:1",
										"text": " @dev Returns the amount of tokens owned by an account (`owner`)."
									},
									"functionSelector": "70a08231",
									"id": 124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 124,
												"src": "1302:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1302:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1301:15:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 124,
												"src": "1340:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1340:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1339:9:1"
									},
									"scope": 248,
									"src": "1283:66:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "1355:585:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n If send or receive hooks are registered for the caller and `recipient`,\n the corresponding functions will be called with `data` and empty\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n Emits a {Sent} event.\n Requirements\n - the caller must have at least `amount` tokens.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."
									},
									"functionSelector": "9bd9bbc6",
									"id": 134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "send",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 134,
												"src": "1959:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1959:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 134,
												"src": "1978:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1978:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 134,
												"src": "1994:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 130,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1994:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1958:56:1"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2023:0:1"
									},
									"scope": 248,
									"src": "1945:79:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "2030:404:1",
										"text": " @dev Destroys `amount` tokens from the caller's account, reducing the\n total supply.\n If a send hook is registered for the caller, the corresponding function\n will be called with `data` and empty `operatorData`. See {IERC777Sender}.\n Emits a {Burned} event.\n Requirements\n - the caller must have at least `amount` tokens."
									},
									"functionSelector": "fe9d9303",
									"id": 142,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 142,
												"src": "2453:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2453:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 142,
												"src": "2469:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 138,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2469:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2452:37:1"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2498:0:1"
									},
									"scope": 248,
									"src": "2439:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "2505:249:1",
										"text": " @dev Returns true if an account is an operator of `tokenHolder`.\n Operators can send and burn tokens on behalf of their owners. All\n accounts are their own operator.\n See {operatorSend} and {operatorBurn}."
									},
									"functionSelector": "d95b6371",
									"id": 152,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isOperatorFor",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 152,
												"src": "2782:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2782:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "tokenHolder",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 152,
												"src": "2800:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2800:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2781:39:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 152,
												"src": "2844:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 149,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2844:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2843:6:1"
									},
									"scope": 248,
									"src": "2759:91:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "2856:233:1",
										"text": " @dev Make an account an operator of the caller.\n See {isOperatorFor}.\n Emits an {AuthorizedOperator} event.\n Requirements\n - `operator` cannot be calling address."
									},
									"functionSelector": "959b8c3f",
									"id": 158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "authorizeOperator",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 158,
												"src": "3121:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3120:18:1"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3147:0:1"
									},
									"scope": 248,
									"src": "3094:54:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "3154:261:1",
										"text": " @dev Revoke an account's operator status for the caller.\n See {isOperatorFor} and {defaultOperators}.\n Emits a {RevokedOperator} event.\n Requirements\n - `operator` cannot be calling address."
									},
									"functionSelector": "fad8b32a",
									"id": 164,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeOperator",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 164,
												"src": "3444:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3444:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3443:18:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3470:0:1"
									},
									"scope": 248,
									"src": "3420:51:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3477:338:1",
										"text": " @dev Returns the list of default operators. These accounts are operators\n for all token holders, even if {authorizeOperator} was never called on\n them.\n This list is immutable, but individual holders may revoke these via\n {revokeOperator}, in which case {isOperatorFor} will return false."
									},
									"functionSelector": "06e48538",
									"id": 171,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "defaultOperators",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3845:2:1"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 171,
												"src": "3871:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 167,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3871:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 168,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "3871:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3870:18:1"
									},
									"scope": 248,
									"src": "3820:69:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "3895:714:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\n be an operator of `sender`.\n If send or receive hooks are registered for `sender` and `recipient`,\n the corresponding functions will be called with `data` and\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n Emits a {Sent} event.\n Requirements\n - `sender` cannot be the zero address.\n - `sender` must have at least `amount` tokens.\n - the caller must be an operator for `sender`.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."
									},
									"functionSelector": "62ad1b83",
									"id": 185,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "operatorSend",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 185,
												"src": "4645:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 185,
												"src": "4669:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 185,
												"src": "4696:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4696:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 185,
												"src": "4720:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 179,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4720:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "operatorData",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 185,
												"src": "4749:27:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 181,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4749:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4635:147:1"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4791:0:1"
									},
									"scope": 248,
									"src": "4614:178:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "4798:532:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the total supply.\n The caller must be an operator of `account`.\n If a send hook is registered for `account`, the corresponding function\n will be called with `data` and `operatorData`. See {IERC777Sender}.\n Emits a {Burned} event.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens.\n - the caller must be an operator for `account`."
									},
									"functionSelector": "fc673c4f",
									"id": 197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "operatorBurn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 197,
												"src": "5366:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5366:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 197,
												"src": "5391:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 197,
												"src": "5415:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 191,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5415:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "operatorData",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 197,
												"src": "5444:27:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 193,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5444:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5356:121:1"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5486:0:1"
									},
									"scope": 248,
									"src": "5335:152:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 211,
									"name": "Sent",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 211,
												"src": "5513:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5513:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 211,
												"src": "5547:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5547:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 211,
												"src": "5577:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5577:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 211,
												"src": "5605:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5605:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 211,
												"src": "5629:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 206,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5629:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"indexed": false,
												"mutability": "mutable",
												"name": "operatorData",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 211,
												"src": "5649:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 208,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5649:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5503:170:1"
									},
									"src": "5493:181:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 223,
									"name": "Minted",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 223,
												"src": "5693:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 223,
												"src": "5719:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5719:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 223,
												"src": "5739:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5739:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 223,
												"src": "5755:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 218,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5755:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"indexed": false,
												"mutability": "mutable",
												"name": "operatorData",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 223,
												"src": "5767:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 220,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5767:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5692:94:1"
									},
									"src": "5680:107:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 235,
									"name": "Burned",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 235,
												"src": "5806:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5806:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 235,
												"src": "5832:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5832:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 235,
												"src": "5854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5854:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 235,
												"src": "5870:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 230,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5870:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"indexed": false,
												"mutability": "mutable",
												"name": "operatorData",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 235,
												"src": "5882:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 232,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5882:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5805:96:1"
									},
									"src": "5793:109:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 241,
									"name": "AuthorizedOperator",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 241,
												"src": "5933:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5933:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenHolder",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 241,
												"src": "5959:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5959:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5932:55:1"
									},
									"src": "5908:80:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 247,
									"name": "RevokedOperator",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 247,
												"src": "6016:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6016:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenHolder",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 247,
												"src": "6042:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6015:55:1"
									},
									"src": "5994:77:1"
								}
							],
							"scope": 249,
							"src": "398:5675:1"
						}
					],
					"src": "0:6074:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777Recipient.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777Recipient.sol",
					"exportedSymbols": {
						"IERC777Recipient": [
							268
						]
					},
					"id": 269,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 250,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 251,
								"nodeType": "StructuredDocumentation",
								"src": "25:406:2",
								"text": " @dev Interface of the ERC777TokensRecipient standard as defined in the EIP.\n Accounts can be notified of {IERC777} tokens being sent to them by having a\n contract implement this interface (contract holders can be their own\n implementer) and registering it on the\n https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\n See {IERC1820Registry} and {ERC1820Implementer}."
							},
							"fullyImplemented": false,
							"id": 268,
							"linearizedBaseContracts": [
								268
							],
							"name": "IERC777Recipient",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "465:474:2",
										"text": " @dev Called by an {IERC777} token contract whenever tokens are being\n moved or created into a registered account (`to`). The type of operation\n is conveyed by `from` being the zero address or not.\n This call occurs _after_ the token contract's state is updated, so\n {IERC777-balanceOf}, etc., can be used to query the post-operation state.\n This function may revert to prevent the operation from being executed."
									},
									"functionSelector": "0023de29",
									"id": 267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokensReceived",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 267,
												"src": "977:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "977:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 267,
												"src": "1003:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1003:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 267,
												"src": "1025:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 267,
												"src": "1045:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1045:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "userData",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 267,
												"src": "1069:23:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 261,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1069:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "operatorData",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 267,
												"src": "1102:27:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 263,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1102:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "967:168:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1144:0:2"
									},
									"scope": 268,
									"src": "944:201:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 269,
							"src": "432:715:2"
						}
					],
					"src": "0:1148:2"
				},
				"id": 2
			},
			"contracts/mytest2/ERC770.sol": {
				"ast": {
					"absolutePath": "contracts/mytest2/ERC770.sol",
					"exportedSymbols": {
						"Merit": [
							374
						]
					},
					"id": 375,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 270,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777Recipient.sol",
							"file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777Recipient.sol",
							"id": 271,
							"nodeType": "ImportDirective",
							"scope": 375,
							"sourceUnit": 269,
							"src": "268:94:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777.sol",
							"file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC777/IERC777.sol",
							"id": 272,
							"nodeType": "ImportDirective",
							"scope": 375,
							"sourceUnit": 249,
							"src": "364:85:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/introspection/IERC1820Registry.sol",
							"file": "@openzeppelin/contracts-ethereum-package/contracts/introspection/IERC1820Registry.sol",
							"id": 273,
							"nodeType": "ImportDirective",
							"scope": 375,
							"sourceUnit": 90,
							"src": "451:95:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 274,
										"name": "IERC777Recipient",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 268,
										"src": "568:16:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC777Recipient_$268",
											"typeString": "contract IERC777Recipient"
										}
									},
									"id": 275,
									"nodeType": "InheritanceSpecifier",
									"src": "568:16:3"
								}
							],
							"contractDependencies": [
								268
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 374,
							"linearizedBaseContracts": [
								374,
								268
							],
							"name": "Merit",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "e89081f8",
									"id": 279,
									"mutability": "mutable",
									"name": "givers",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 374,
									"src": "592:38:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 278,
										"keyType": {
											"id": 276,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "600:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "592:24:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 277,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "611:4:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 281,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 374,
									"src": "637:14:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 280,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "637:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 283,
									"mutability": "mutable",
									"name": "_token",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 374,
									"src": "658:14:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC777_$248",
										"typeString": "contract IERC777"
									},
									"typeName": {
										"contractScope": null,
										"id": 282,
										"name": "IERC777",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 248,
										"src": "658:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC777_$248",
											"typeString": "contract IERC777"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 288,
									"mutability": "mutable",
									"name": "_erc1820",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 374,
									"src": "679:96:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC1820Registry_$89",
										"typeString": "contract IERC1820Registry"
									},
									"typeName": {
										"contractScope": null,
										"id": 284,
										"name": "IERC1820Registry",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 89,
										"src": "679:16:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC1820Registry_$89",
											"typeString": "contract IERC1820Registry"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "307831383230613442373631384264453731446365386364633733614142364339353930356661443234",
												"id": 286,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "732:42:3",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"value": "0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											],
											"id": 285,
											"name": "IERC1820Registry",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 89,
											"src": "715:16:3",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC1820Registry_$89_$",
												"typeString": "type(contract IERC1820Registry)"
											}
										},
										"id": 287,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "715:60:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC1820Registry_$89",
											"typeString": "contract IERC1820Registry"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 291,
									"mutability": "constant",
									"name": "TOKENS_RECIPIENT_INTERFACE_HASH",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 374,
									"src": "784:125:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 289,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "784:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307862323831666338633132393534643232353434646234356465333135396133393237323839356231363961383532623331346639636337363265343463353362",
										"id": 290,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "843:66:3",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_80741353335606793576644178559265408063696393279619534167571325834855102858555_by_1",
											"typeString": "int_const 8074...(69 digits omitted)...8555"
										},
										"value": "0xb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 319,
										"nodeType": "Block",
										"src": "950:169:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 301,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "1002:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Merit_$374",
																		"typeString": "contract Merit"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Merit_$374",
																		"typeString": "contract Merit"
																	}
																],
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "994:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 299,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "994:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "994:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 303,
															"name": "TOKENS_RECIPIENT_INTERFACE_HASH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "1009:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 306,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "1050:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Merit_$374",
																		"typeString": "contract Merit"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Merit_$374",
																		"typeString": "contract Merit"
																	}
																],
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1042:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 304,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1042:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1042:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 296,
															"name": "_erc1820",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "961:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1820Registry_$89",
																"typeString": "contract IERC1820Registry"
															}
														},
														"id": 298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "setInterfaceImplementer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 28,
														"src": "961:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (address,bytes32,address) external"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "961:95:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "961:95:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 310,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "1067:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 311,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "1076:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 312,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1076:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1067:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 314,
												"nodeType": "ExpressionStatement",
												"src": "1067:19:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 315,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "1097:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC777_$248",
															"typeString": "contract IERC777"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 316,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "1106:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC777_$248",
															"typeString": "contract IERC777"
														}
													},
													"src": "1097:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC777_$248",
														"typeString": "contract IERC777"
													}
												},
												"id": 318,
												"nodeType": "ExpressionStatement",
												"src": "1097:14:3"
											}
										]
									},
									"documentation": null,
									"id": 320,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 320,
												"src": "928:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC777_$248",
													"typeString": "contract IERC777"
												},
												"typeName": {
													"contractScope": null,
													"id": 292,
													"name": "IERC777",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 248,
													"src": "928:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC777_$248",
														"typeString": "contract IERC777"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "927:15:3"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "950:0:3"
									},
									"scope": 374,
									"src": "916:203:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										267
									],
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "1341:41:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 336,
															"name": "givers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "1352:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 338,
														"indexExpression": {
															"argumentTypes": null,
															"id": 337,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "1359:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1352:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 339,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "1368:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1352:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 341,
												"nodeType": "ExpressionStatement",
												"src": "1352:22:3"
											}
										]
									},
									"documentation": null,
									"functionSelector": "0023de29",
									"id": 343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokensReceived",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 334,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1332:8:3"
									},
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 343,
												"src": "1161:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1161:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 343,
												"src": "1188:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1188:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 343,
												"src": "1211:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 343,
												"src": "1232:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1232:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "userData",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 343,
												"src": "1254:23:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 329,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1254:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "operatorData",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 343,
												"src": "1288:27:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 331,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1288:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1150:172:3"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1341:0:3"
									},
									"scope": 374,
									"src": "1125:257:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "1456:165:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 347,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "1475:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1475:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 349,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 281,
																"src": "1489:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1475:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6e6f207065726d697373696f6e",
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1497:15:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_34b15d85d6796fb603098d6f5b598f1726e3f87f7388833c2a25638759287c67",
																"typeString": "literal_string \"no permission\""
															},
															"value": "no permission"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_34b15d85d6796fb603098d6f5b598f1726e3f87f7388833c2a25638759287c67",
																"typeString": "literal_string \"no permission\""
															}
														],
														"id": 346,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1467:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1467:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "1467:46:3"
											},
											{
												"assignments": [
													355
												],
												"declarations": [
													{
														"constant": false,
														"id": 355,
														"mutability": "mutable",
														"name": "balance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 372,
														"src": "1524:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 354,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1524:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 363,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 360,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "1564:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Merit_$374",
																		"typeString": "contract Merit"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Merit_$374",
																		"typeString": "contract Merit"
																	}
																],
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1556:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 358,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1556:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1556:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 356,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "1539:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC777_$248",
																"typeString": "contract IERC777"
															}
														},
														"id": 357,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 124,
														"src": "1539:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1539:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1524:46:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 367,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "1593:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 368,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "1601:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1610:2:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 364,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "1581:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC777_$248",
																"typeString": "contract IERC777"
															}
														},
														"id": 366,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "send",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 134,
														"src": "1581:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory) external"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1581:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "1581:32:3"
											}
										]
									},
									"documentation": null,
									"functionSelector": "3ccfd60b",
									"id": 373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1444:2:3"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1456:0:3"
									},
									"scope": 374,
									"src": "1427:194:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 375,
							"src": "550:1074:3"
						}
					],
					"src": "35:1589:3"
				},
				"id": 3
			}
		}
	}
}